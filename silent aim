local spt = {2788229376, 9825515356}
if not table.find(spt, game.PlaceId) then
    game.Players.LocalPlayer:Kick("https://raw.githubusercontent.com/skyDevO01/rblx_scripts/refs/heads/main/silent%20aim")
end

getgenv().Configuration = getgenv().Configuration
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local hitpart = getgenv().Configuration.HitPart or "Head"
local keybind = getgenv().Configuration.Keybind or Enum.KeyCode.C
local TextAbove =  getgenv().Configuration.Text or "---> Locked <---"
local currentTarget = nil
local oldIndex = nil
local hooking = false
local tracer = nil
local label = nil

local function removeTracer()
    if tracer then
        tracer:Destroy()
        tracer = nil
    end
    if label then
        label:Destroy()
        label = nil
    end
end

local function drawTracer()
    removeTracer()
    local localCharacter = LocalPlayer.Character
    local targetCharacter = currentTarget and currentTarget.Character
    local targetPart = targetCharacter and targetCharacter:FindFirstChild(hitpart)
    if not (localCharacter and targetPart) then
        return
    end
    local attachment0 = Instance.new("Attachment")
    attachment0.Parent = localCharacter:FindFirstChild("HumanoidRootPart")
    
    local attachment1 = Instance.new("Attachment")
    attachment1.Parent = targetPart
    tracer = Instance.new("Beam")
    tracer.Name = "TracerBeam"
    tracer.Attachment0 = attachment0
    tracer.Attachment1 = attachment1
    tracer.Color = ColorSequence.new(Color3.new(1, 0, 0))
    tracer.FaceCamera = true
    tracer.Width0 = 0.1
    tracer.Width1 = 0.1
    tracer.Transparency = NumberSequence.new(0.5)
    tracer.LightEmission = 1
    tracer.Parent = workspace

    label = Instance.new("BillboardGui")
    label.Name = "TargetBillboard"
    label.Adornee = targetPart
    label.AlwaysOnTop = true
    label.Size = UDim2.new(4, 0, 1.5, 0)
    label.StudsOffset = Vector3.new(0, 2.5, 0)
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Name = "TargetLabel"
    textLabel.Text = TextAbove
    textLabel.TextColor3 = Color3.new(1, 0.2, 0.2)
    textLabel.BackgroundTransparency = 1
    textLabel.TextScaled = true
    textLabel.Font = Enum.Font.SourceSansBold
    textLabel.TextStrokeTransparency = 0
    textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.Parent = label
    
    label.Parent = targetPart
end

local function getClosestPlayerToMouse()
    local closestPlayer = nil
    local shortestDistance = math.huge
    local camera = workspace.CurrentCamera
    local mouseLocation = UserInputService:GetMouseLocation()

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(hitpart) then
            local targetPart = player.Character:FindFirstChild(hitpart)
            local screenPos, onScreen = camera:WorldToScreenPoint(targetPart.Position)
            
            if onScreen then
                local distance = (Vector2.new(screenPos.X, screenPos.Y) - mouseLocation).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    closestPlayer = player
                end
            end
        end
    end

    return closestPlayer
end

local function enableHook()
    if hooking or not currentTarget then return end
    hooking = true
    oldIndex = hookmetamethod(game, "__index", function(self, key)
        if not checkcaller() and typeof(self) == "Instance" and self:IsA("Mouse") and currentTarget then
            local targetPart = currentTarget.Character and currentTarget.Character:FindFirstChild(hitpart)
            if targetPart then
                if key == "Target" then
                    return targetPart
                elseif key == "Hit" then
                    return targetPart.CFrame
                end
            end
        end
        return oldIndex(self, key)
    end)
    drawTracer()
end

local function disableHook()
    if not hooking then return end
    hooking = false
    removeTracer()
    if oldIndex then
        hookmetamethod(game, "__index", oldIndex)
        oldIndex = nil
    end
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == keybind then
        if currentTarget then
            currentTarget = nil
            disableHook()
        else
            local closest = getClosestPlayerToMouse()
            if closest then
                currentTarget = closest
                enableHook()
            end
        end
    end
end)

Players.PlayerRemoving:Connect(function(player)
    if player == currentTarget then
        currentTarget = nil
        disableHook()
    end
end)
